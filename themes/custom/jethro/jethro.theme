<?php

/**
 * @file
 * Contains theme override functions and preprocess functions
 */
define('THEME_PATH', base_path() . drupal_get_path('theme', 'jethro'));

use Drupal\Core\Template\RenderWrapper;
use Drupal\Core\Template\Attribute;
use Drupal\search\Form\SearchBlockForm;
use Drupal\Component\Utility\SafeMarkup;
use Drupal\file\Plugin\Core\Entity\FileInterface;
use Drupal\Component\Utility\Unicode;
use Drupal\Core\Path\AliasManager;

/**
 * @file
 * Functions to support theming in the beginning theme.
 */

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */

function jethro_preprocess_page(&$variables) {
  // Add Responsive class for banner bottom.
  if (!empty($variables['page']['banner_bottom_first']) && !empty($variables['page']['banner_bottom_second']) && !empty($variables['page']['banner_bottom_third'])) {
    $variables['banner_bottom_class'] = 'col-md-4';
  }
  elseif((!empty($variables['page']['banner_bottom_first']) && !empty($variables['page']['banner_bottom_second'])) or (!empty($variables['page']['banner_bottom_first']) && !empty($variables['page']['banner_bottom_third'])) or (!empty($variables['page']['banner_bottom_third']) && !empty($variables['page']['banner_bottom_second']))) {
    $variables['banner_bottom_class'] = 'col-md-6';
  }
  else {
    $variables['banner_bottom_class'] = 'col-md-12';
  }

  // Add Responsive class for footer.
  if (!empty($variables['page']['footer_first']) && !empty($variables['page']['footer_second']) && !empty($variables['page']['footer_third'])) {
    $variables['footer_class'] = 'col-lg-4';
  }
  elseif((!empty($variables['page']['footer_first']) && !empty($variables['page']['footer_second'])) or (!empty($variables['page']['footer_first']) && !empty($variables['page']['footer_third'])) or (!empty($variables['page']['footer_third']) && !empty($variables['page']['footer_second']))) {
    $variables['footer_class'] = 'col-lg-6';
  }
  else {
    $variables['footer_class'] = 'col-lg-12';
  }

  // Add information about the number of sidebars.
  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
    $variables['contentlayout'] = 'col-md-6 col-sm-6';
    $variables['sidebarfirst'] = 'col-md-3 col-sm-3';
    $variables['sidebarsecond'] = 'col-md-3 col-sm-3';
  }

  elseif (!empty($variables['page']['sidebar_first'])) {
    $variables['contentlayout'] = 'col-md-8 col-sm-8 ';
    $variables['sidebarfirst'] = 'col-md-4 col-sm-4';
  }

  elseif (!empty($variables['page']['sidebar_second'])) {
    $variables['contentlayout'] = 'col-md-8 sol-sm-8 ';
    $variables['sidebarsecond'] = 'col-md-4 col-sm-4';
  }
  else {
    $variables['contentlayout'] = 'col-lg-12 col-lg-offset-1 centered ';
  }
  $show_slideshow = theme_get_setting('slideshow_display', 'jethro');
  $current_path = \Drupal::service('path.current')->getPath();
  $path_alias = Unicode::strtolower(\Drupal::service('path.alias_manager')->getAliasByPath($current_path));
  if (theme_get_setting('slideshow_visiblity', 'jethro')) {
    $visiblity = \Drupal::service('path.matcher')->matchPath($path_alias, theme_get_setting('slideshow_visiblity', 'jethro'));
  }
  $slideshow_path = isset($visiblity) ? $visiblity : $vars['is_front'];
  if ($slideshow_path && $show_slideshow) {
    $variables['slider'] = array();
    for ($i = 1; $i <= theme_get_setting('slideshow_count', 'jethro'); $i++) {
      $fid = theme_get_setting("slide_image_{$i}", "jethro");
      if (!empty($fid)) {
        $file = \Drupal\file\Entity\File::load($fid[0]);
        $uri = $file->getFileUri();
        $image_path = file_create_url($uri);
      }
      else {
        $image_path = THEME_PATH . "/images/slide-{$i}.jpg";
      }
      $variables['slider'][] = array(
        'name' => !empty($fid) ? $file->getFilename() : "slider-{$i}",
        'url' => theme_get_setting("slide_url_{$i}", "jethro"),
        'src' => $image_path,
        'description' => theme_get_setting("slide_description_{$i}", "jethro"),
      );
    }
  }

  $variables['socialicons'] = _jethro_get_socialicons();
}

/**
 * Custom function to genetate social icons links.
 */
function _jethro_get_socialicons() {
  $content = '<div class="follow-section"><div class="social"><ul>';
  for ($i = 1; $i <= theme_get_setting('socialicon_count', 'jethro'); $i++) {
    if (!empty(theme_get_setting("social_class_{$i}"))) {
      $content .= '<li><a href="' . theme_get_setting("social_url_{$i}") . '" target="_blank"><i class="fa ' . theme_get_setting("social_class_{$i}") . '"></i></a></li>';
    }
  }
  $content .= '</ul></div></div>';
  return $content;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function jethro_form_system_theme_settings_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $form['jethro_settings'] = array(
    '#type' => 'details',
    '#title' => t('jethro Settings'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );
  // Social icon configutation fieldset
  $form['jethro_settings']['socialicon'] = array(
    '#type' => 'details',
    //~ '#tree' => TRUE,
    '#title' => t('Social icons configuration'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['jethro_settings']['socialicon']['socialicon_count'] = array(
    '#type' => 'select',
    '#title' => t('Social Icon Count'),
    '#default_value' => theme_get_setting('socialicon_count', 'jethro'),
    '#options' => array(5 => 5, 10 => 10, 15 => 15),
    '#description'   => t("Mention total number of slides in the slideshow."),
  );
  for ($i = 1; $i <= theme_get_setting('socialicon_count', 'jethro'); $i++) {
    $form['jethro_settings']['socialicon'][$i] = array(
      '#type' => 'fieldset',
      //~ '#tree' => TRUE,
      '#title' => t("Social icon - {$i}"),
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
    );

    $form['jethro_settings']['socialicon'][$i]["social_class_{$i}"] = array(
      '#type' => 'textfield',
      '#title' => t('Class'),
      '#description' => t('Enter <a href="https://fortawesome.github.io/Font-Awesome/icons/#brand" target="_blank">font awesome social icon</a> class. for example "fa-facebook" for facebook'),
      '#default_value' => theme_get_setting("social_class_{$i}"),
    );
    $form['jethro_settings']['socialicon'][$i]["social_url_{$i}"] = array(
      '#type' => 'textfield',
      '#title' => t('Url'),
      '#description' => t("Enter your's social sites profile url."),
      '#default_value' => theme_get_setting("social_url_{$i}"),
    );
  }
  $form['jethro_settings']['slideshow'] = array(
    '#type' => 'details',
    '#title' => t('Front Page Slideshow'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['jethro_settings']['slideshow']['slideshow_count'] = array(
    '#type' => 'select',
    '#title' => t('SlideShow Count'),
    '#default_value' => theme_get_setting('slideshow_count', 'jethro'),
    '#options' => array(1 => 1, 2 => 2, 3 => 3, 4 => 4, 5 => 5, 6 => 6, 7 => 7, 8 => 8, 9 => 9, 10 => 10),
    '#description'   => t("Mention total number of slides in the slideshow."),
  );
  $form['jethro_settings']['slideshow']['slideshow_display'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show slideshow'),
    '#default_value' => theme_get_setting('slideshow_display', 'jethro'),
    '#description'   => t("Check this option to show Slideshow in front page. Uncheck to hide."),
  );
  $form['jethro_settings']['slideshow']['slide'] = array(
    '#markup' => t('You can change the title, url and image of each slide in the following Slide Setting fieldsets.'),
  );

  for ($i = 1; $i <= theme_get_setting('slideshow_count', 'jethro'); $i++) {
    $form['jethro_settings']['slideshow']["slide{$i}"] = array(
      '#type' => 'details',
      '#title' => t("Slide {$i}"),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );
    $form['jethro_settings']['slideshow']["slide{$i}"]["slide_description_{$i}"] = array(
      '#type' => 'textarea',
      '#title' => t('Slide '.$i.' Title'),
      '#default_value' => theme_get_setting("slide_description_{$i}", "jethro"),
    );
    $form['jethro_settings']['slideshow']["slide{$i}"]["slide_image_{$i}"] = array(
      '#type' => 'managed_file',
      '#title' => t('Slide '.$i.' Image'),
      '#description' => t('Use same size for all the slideshow images(Recommented size : 930 x 320).'),
      '#default_value' => theme_get_setting("slide_image_{$i}", "jethro"),
      '#upload_location' => 'public://',
    );
    $form['jethro_settings']['slideshow']["slide{$i}"]["slide_url_{$i}"] = array(
      '#type' => 'textfield',
      '#title' => t('Slide '.$i.' URL'),
      '#default_value' => theme_get_setting("slide_url_{$i}", "jethro"),
    );
  }
  $form['jethro_settings']['slideshow']['slideshow_visiblity'] = array(
    '#type' => 'textarea',
    '#title' => t('Visibility'),
    '#default_value' => theme_get_setting('slideshow_visiblity', 'jethro'),
    '#description'   => t("Specify pages by using their paths. Enter one path per line. The '*' character is a wildcard. Example paths are /user for the current user's page and /user/* for every user page. front is the front page."),
  );
  $filename = drupal_get_path('theme', 'jethro') . '/jethro.theme';
  $form_state->addBuildInfo('files', array($filename));
  // Custom submit to save the file permenant.
  $form['#submit'][] = 'jethro_settings_form_submit';
}

/**
 * Custom submit handler for integrity settings form.
 */
function jethro_settings_form_submit(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $account = \Drupal::currentUser();
  $values = $form_state->getValues();
  for ($i = 0; $i <= theme_get_setting('slideshow_count', 'jethro'); $i++) {
    if (isset($values["slide_image_{$i}"]) && !empty($values["slide_image_{$i}"])) {
      // Load the file via file.fid.
      if ($file = \Drupal\file\Entity\File::load($values["slide_image_{$i}"][0])) {
        // Change status to permanent.
        $file->setPermanent();
        $file->save();
        $file_usage = \Drupal::service('file.usage');
        $file_usage->add($file, 'user', 'user', $account->id());
      }
    }
  }
}


/**
 * Implements hook_preprocss_block().
 */
function jethro_preprocess_block(&$variables) {
  // Add bootstrap collapse class to menu block.
  if ($variables['elements']['#plugin_id'] == 'system_menu_block:main' || $variables['elements']['#plugin_id'] == 'system_menu_block:account') {
    $variables['attributes']['class'][] = 'navbar-collapse';
    $variables['attributes']['class'][] = 'collapse';
  }
}
